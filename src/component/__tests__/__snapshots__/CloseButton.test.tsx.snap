// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloseButton component tests renders correctly with a different color 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "opacity": 1,
      },
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "height": 30,
          "width": 30,
        },
        undefined,
      ],
    ]
  }
>
  <SvgIcon
    color="#26D2E8"
    height={24}
    name="x"
    width={24}
  />
</View>
`;

exports[`CloseButton component tests renders correctly with a different onPress handler 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "opacity": 1,
      },
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "height": 30,
          "width": 30,
        },
        undefined,
      ],
    ]
  }
>
  <SvgIcon
    color="#A0A8B8"
    height={24}
    name="x"
    width={24}
  />
</View>
`;

exports[`CloseButton component tests renders correctly with default props 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "opacity": 1,
      },
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "height": 30,
          "width": 30,
        },
        undefined,
      ],
    ]
  }
>
  <SvgIcon
    color="#A0A8B8"
    height={24}
    name="x"
    width={24}
  />
</View>
`;

exports[`CloseButton component tests renders correctly with different width and height 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "opacity": 1,
      },
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "height": 30,
          "width": 30,
        },
        undefined,
      ],
    ]
  }
>
  <SvgIcon
    color="#A0A8B8"
    height={32}
    name="x"
    width={32}
  />
</View>
`;

exports[`CloseButton component tests renders correctly with height changed to 16 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "opacity": 1,
      },
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
        {
          "height": 30,
          "width": 30,
        },
        undefined,
      ],
    ]
  }
>
  <SvgIcon
    color="#A0A8B8"
    height={16}
    name="x"
    width={24}
  />
</View>
`;
